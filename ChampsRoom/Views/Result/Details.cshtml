@model ChampsRoom.ViewModels.ResultDetailsViewModel

<div class="row text-center">
    <h1>@Model.User.UserName</h1>
    <p class="lead">All matches played in @Html.ActionLink(Model.League.Name, "Details", "League", new { slug = Model.League.Slug }, null)</p>

    <p class="lead">
        @foreach (var item in Model.Matches.SelectMany(q => q.Sets.Where(x => x.HomeScore == 0 || x.AwayScore == 0)))
        {
            if (item.Match.IsHome(Model.User))
            {
                if (item.HomeScore == 0)
                {
                    <img src="~/content/images/egg-got.gif" />
                }
                else if (item.AwayScore == 0)
                {
                    <img src="~/content/images/egg-gave.gif" />
                }
            }
            else
            {
                if (item.AwayScore == 0)
                {
                    <img src="~/content/images/egg-got.gif" />
                }
                else if (item.HomeScore == 0)
                {
                    <img src="~/content/images/egg-gave.gif" />
                }
            }
        }
    </p>
</div>

<div class="row">
    <div class="col-md-6">
        <div id="chart-ranking" style="width: 100%; height: 300px;"></div>
    </div>
    <div class="col-md-6">
        <div id="chart-rating" style="width: 100%; height: 300px;"></div>
    </div>
</div>

<div class="row row-top-spacer">
    <div class="col-xs-12 col-md-12">
        <table class="table table-striped table-hover table-responsive">
            <thead>
                <tr>
                    <th class="text-center">Home</th>
                    <th class="text-center">Away</th>
                    <th>Score</th>
                    <th>Rating</th>
                    <th>Rank</th>
                </tr>
            </thead>
            @foreach (var item in Model.Matches)
            {
                var rating = item.GetRating(Model.User);
                <tr>
                    <td class="text-center">
                        <ul class="list-inline">
                            @foreach (var user in item.HomeUsers)
                            {
                                <li><a href="@Url.Action("Details", "Result", new { slug = Model.League.Slug, slugUser = user.Slug })"><img src="@user.GetImageUrl()" class="img-rounded img-profile img-profile-xs" alt="" /></a></li>
                            }
                        </ul>
                    </td>
                    <td class="text-center">
                        <ul class="list-inline">
                            @foreach (var user in item.AwayUsers)
                            {
                                <li><a href="@Url.Action("Details", "Result", new { slug = Model.League.Slug, slugUser = user.Slug })"><img src="@user.GetImageUrl()" class="img-rounded img-profile img-profile-xs" alt="" /></a></li>
                            }
                        </ul>
                    </td>
                    <td>
                        <div class="tooltip" rel="tooltip" data-toggle="tooltip" data-html="true" title="@item.GetSetScoresTooltip().ToHtmlString()">Score</div>
                        @if (item.Draw)
                        {
                            <span class="label label-default">@item.GetHomeSetScore()</span> <span class="label label-default">@item.GetAwaySetScore()</span>
                        }
                        else if (item.UserWon(Model.User))
                        {
                            <span class="label label-success">@item.GetHomeSetScore()</span> <span class="label label-success">@item.GetAwaySetScore()</span>
                        }
                        else
                        {
                            <span class="label label-danger">@item.GetHomeSetScore()</span> <span class="label label-danger">@item.GetAwaySetScore()</span>
                        }
                    </td>
                    <td>
                        <span class="label @rating.RatingChange.GetLabelClass()"><i class="fa @rating.RatingChange.GetIconArrowClass()"></i> @rating.Rate <span class="small">@rating.RatingChange.DisplayChange()</span></span>
                    </td>
                    <td>
                        <span class="label @rating.RankingChange.GetLabelClass()"><i class="fa @rating.RankingChange.GetIconArrowClass()"></i> @rating.Rank <span class="small">@rating.RankingChange.DisplayChange()</span></span>
                    </td>
                </tr>
            }
        </table>
    </div>
</div>

@section scripts {
    <script language="javascript" type="text/javascript" src="~/Scripts/flot/jquery.flot.min.js"></script>
    <script type="text/javascript">
    $(function () {

        $('.tooltip').tooltip();

        var chartRanking = [@ViewBag.ChartRanking];
        var chartRankMax = @Model.League.Users.Count;
        var chartRating = [@ViewBag.ChartRating];
        var chartRatingMax = @ViewBag.ChartRatingMax;
        var chartRatingMin = @ViewBag.ChartRatingMin;

        var optionsRating = {
            series: {
                color: '#4bcd4b',
                lines: { fill: true },
                points: { show: false }
            },
            yaxis: {
                label: "Rating",
                max: chartRatingMax,
                min: chartRatingMin
                },
            grid: {
                borderColor: '#d8d8d8',
                backgroundColor: { colors: ["#ffffff", "#d4d4d4"] }
            }
        };

        var optionsRanking = {
            series: {
                color: '#4bcd4b',
                lines: { fill: true },
                points: { show: false }
            },
            yaxis: {
                label: "Rank",
                max: chartRankMax,
                min: 1,
                tickFormatter: function (val, axis)
                {
                    if (val == axis.max)
                        return "Champ!";

                    if (val <= 1)
                        return "Lorten!";

                    return Math.abs(val-(chartRankMax + 1));
                }
            },
            grid: {
                borderColor: '#d8d8d8',
                backgroundColor: { colors: ["#ffffff", "#d4d4d4"] }
            }
        };


        $.plot($("#chart-ranking"), [chartRanking], optionsRanking);
        $.plot($("#chart-rating"), [chartRating], optionsRating);


        $("<div class='axisLabel yaxisLabel'></div>").text("Pressure").appendTo($("#yl_1"));
    });
    </script>
}